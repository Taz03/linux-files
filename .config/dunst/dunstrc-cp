[global]
# font = Roboto Medium 12
enable_recursive_icon_lookup = true
markup = full
format = "<b>%s</b>\n%b"
corner_radius = 8

# Sort messages by urgency.
sort = no

# Show how many messages are currently hidden (because of geometry).
indicate_hidden = yes

# Alignment of message text.
# Possible values are "left", "center" and "right".
alignment = left

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 5

# Split notifications into multiple lines if they don't fit into
# geometry.
word_wrap = yes

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Hide duplicate's count and stack them
stack_duplicates = false
hide_duplicate_count = no

origin = top-right

# offset = 9x64

# width = (0,500)

# Shrink window if it's smaller than the width.  Will be ignored if
# width is 0.
shrink = no

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
idle_threshold = 120

# Which monitor should the notifications be displayed on.
# monitor = 0

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a windowmanager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern windowmanagers.
#
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = mouse

mouse_left_click = do_action
mouse_right_click = close_all

# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 5

# Display indicators for URLs (U) and actions (A).
show_indicators = no

# The height of a single line.  If the height is smaller than the
# font height, it will get raised to the font height.
# This adds empty space above and under the text.
line_height = 4

# Draw a line of "separatpr_height" pixel height between two
# notifications.
# Set to 0 to disable.
separator_height = 4

# Padding between text and separator.
padding = 15

# Horizontal padding.
horizontal_padding = 15

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = auto

# Print a notification on startup.
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = true

# Browser for opening urls in context menu.
browser = x-www-browser -new-tab

always_run_script = true
title = Dunst
class = Dunst

# Align icons left/right/off
icon_position = left
max_icon_size = 48

frame_width = 0

# [shortcuts]
#
# # Shortcuts are specified as [modifier+][modifier+]...key
# # Available modifiers are "ctrl", "mod1" (the alt-key), "mod2",
# # "mod3" and "mod4" (windows-key).
# # Xev might be helpful to find names for keys.
#
# # Close notification.
# close = ctrl+shift+space
#
# # Close all notifications.
# close_all = ctrl+shift+space
#
# # Redisplay last message(s).
# # On the US keyboard layout "grave" is normally above TAB and left
# # of "1".
# history = ctrl+grave
#
# # Context menu.
# context = ctrl+shift+period

[urgency_low]
# IMPORTANT: colors have to be defined in quotation marks.
# Otherwise the "#" and following would be interpreted as a comment.
frame_color = "#7bc5e4"
foreground = "#7bc5e4"
background = "#282e49"
timeout = 10

[urgency_normal]
frame_color = "#7bc5e4"
foreground = "#7bc5e4"
background = "#282e49"
timeout = 10

[urgency_critical]
frame_color = "#f7768e"
foreground = "#ffffff"
background = "#c45e71"
timeout = 10

[notify_send]
appname = notify-send
new_icon = bell

[wireless]
appname = wireless
new_icon = network-card
format = "<span font_desc='JetBrainsMono Medium Nerd Font'>%b</span>"

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
# Messages can be matched by "appname", "summary", "body", "icon", "category",
# "msg_urgency" and you can override the "timeout", "urgency", "foreground",
# "background", "new_icon" and "format".
# Shell-like globbing will get expanded.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
# vim: ft=cfg
